#!/usr/bin/env ruby

require 'license_finder'
require 'optparse'

module SpinnerStrategy
  module Spin
    def self.run
      thread = Thread.new() {
        wheel = '\|/-'
        i = 0
        while not LicenseFinder::CLI.class_variable_get("@@run_complete") do
          print "\r ---------- #{wheel[i]} ----------"
          i = (i + 1) % 4
        end
      }
      yield
      thread.join
    end
  end

  module Noop
    def self.run
      yield
    end
  end
end

options = {}
spinner = SpinnerStrategy::Spin
skip = false

OptionParser.new do |opts|
  opts.banner = "Usage: license_finder [options] [dependency]"

  opts.on("-a", "--approve", "Approve a gem by name.") do |gem_name|
    options[:approve] = true
  end

  opts.on("-l", "--license [LICENSE]", "Update a gem's license.") do |license|
    options[:license] = license
  end

  opts.on("-q", "--quiet") do
    spinner = SpinnerStrategy::Noop
  end

  opts.on("-m", "--move") do
    skip = true
    `sed '$d' < config/license_finder.yml > tmp34567.txt`
    `mv tmp34567.txt config/license_finder.yml`
    `echo "dependencies_file_dir: './doc/'" >> config/license_finder.yml`
    `mkdir -p doc`
    `mv dependencies.* doc/`
    puts "Congratulations, you have cleaned up your root directory!'"
  end
end.parse!

unless options.empty?
  options[:dependency] = ARGV.last
end

spinner.run {
  LicenseFinder::CLI.execute!(options)
} unless skip
